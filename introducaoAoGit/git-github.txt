üõ† Git e GitHub na Pr√°tica
O Git e o GitHub revolucionaram a forma como desenvolvedores versionam, compartilham e colaboram em projetos. Mas como tudo isso funciona na pr√°tica?

üîÑ Git: Controle de Vers√£o Local
Git √© um sistema de controle de vers√£o distribu√≠do. Isso significa que ele permite acompanhar todas as modifica√ß√µes feitas em arquivos ao longo do tempo. Comandos b√°sicos como:
- git init: inicia um reposit√≥rio local
- git add: adiciona arquivos √† √°rea de preparo (stage)
- git commit: salva um ponto no hist√≥rico do projeto
- git log: visualiza os commits realizados
- git branch: cria e gerencia ramifica√ß√µes (branches)
Essas a√ß√µes s√£o todas feitas no seu computador, permitindo total controle do seu c√≥digo, mesmo offline.

‚òÅÔ∏è GitHub: A Nuvem da Colabora√ß√£o
GitHub √© uma plataforma online que hospeda seus reposit√≥rios Git. Ele facilita a colabora√ß√£o, revis√£o de c√≥digo e integra√ß√£o com outras ferramentas.
Funcionalidades que se destacam:
- Push e Pull: envie (push) ou baixe (pull) altera√ß√µes entre seu reposit√≥rio local e o GitHub
- Fork e Pull Request (PR): contribua para outros projetos sem bagun√ßar o original
- Issues e Discussions: acompanhe bugs, d√∫vidas e melhorias
- Actions: automatize tarefas (como testes ou deploy)

üöß Aplicando na Pr√°tica
Trabalhar com Git e GitHub na pr√°tica envolve:
- Criar um reposit√≥rio local
- Fazer commits frequentes com mensagens claras
- Conectar ao GitHub para versionamento remoto
- Criar branches para testar funcionalidades
- Revisar, discutir e integrar mudan√ßas com Pull Requests
- Aprender com erros e resolver conflitos de merge
A pr√°tica constante com pequenos projetos ‚Äî como este ‚Äî √© a melhor forma de dominar esses conceitos!
